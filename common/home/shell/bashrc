[[ $- == *i* ]] || return
shopt -s extglob lastpipe expand_aliases
alias \
	nameref='typeset -n' \
	integer='typeset -i' \
	command='command ' \
	nohup='nohup '

function main {
	unset -f main

	# Shell configuration that applies to all environments.
	function setupUniversalOptions {
		stty -ixon -ctlecho
		shopt -u interactive_comments lithist
		shopt -s extglob lastpipe globstar expand_aliases cmdhist histappend checkwinsize 2>/dev/null
		set -o vi                        # Set interactive vi mode.
		set +o histexpand                # Disable history expansion.
		#unset -v HISTFILESIZE
		#HISTSIZE=-1
	}

	# Set env vars that always apply to this user's interactive shells.
	function setupUniversalEnvironment {
		export LC_COLLATE=C LC_CTYPE=en_US.UTF-8
		unset -v HOME; export HOME=~
		stripTildesFromColonDelimitedFields PATH || echo 'PATH was modified to remove tildes!' >&2 
		[[ $EUID != 0 && $PWD != "$HOME" ]] && command cd 
		source /etc/profile

		unset -v PYTHONPATH
		export XMLLINT_INDENT='    '     # Make the xmllint formatter use 4-space indents.
		export COMP_CVS_REMOTE=1         # Access remotely checked-out files over passwordless ssh for CVS
		export COMP_CONFIGURE_HINTS=1    # Avoid stripping description in --option=description of './configure --help'
		export COMP_TAR_INTERNAL_PATHS=1 # Define to avoid flattening internal contents of tar files
		export MONO_USE_LLVM=1

		# If this is a real linux VT then allow 16 colors (default is 8) and swap caps-lock / escape keys
		# See "remapEsc" in "functions" to do the same in X.
		if [[ $TERM == linux ]]; then
			export TERM=linux-16color
			loadkeys -
		fi <<-\EOF 2>/dev/null
		keycode 1 = Caps_Lock
		keycode 58 = Escape
	EOF
	}

	function setupAgentDaemons {
		# gpg-agent uses .gnupg but won't create the directory itself for new users.
		if ! { [[ -d ~/.gnupg ]] || mkdir -p -- ~/.gnupg; }; then
			printf 'bashrc: %s\n' 'No ~/.gnupg directory exists and failed to create it.' >&2
			return 1
		fi

		if [[ -t 0 ]] && { GPG_TTY=$(readlink -sne /dev/fd/0) || GPG_TTY=$(tty); }; then
			export GPG_TTY
		else
			unset -v GPG_TTY
		fi

		if gpg-connect-agent /bye; then
			unset -v SSH_AGENT_PID
			if [[ ${gnupg_SSH_AUTH_SOCK_by:-0} != "${BASHPID:-$$}" ]]; then
				export SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh
			fi
		else
			return 1
		fi
	}

	function setupDbusSessionBus {
		if [[ -z $DBUS_SESSION_BUS_ADDRESS ]]; then
			eval "$(dbus-launch --sh-syntax)"
		else
			return 0
		fi
	}

	# It's safer to just drop fields from conetxts in which Bash performs an
	# implicit tilde expansion such as PATH and CDPATH (which is in turn determined
	# by HOME). Returns 1 if fields from any of the given vars were modified.
	function stripTildesFromColonDelimitedFields {
		typeset -a pathComponents
		typeset field ret=0
		typeset -n __var

		for __var; do 
			printf -- %s "$var" | IFS= read -rd '' -a pathComponents
			field= __var=
			for field in "${pathComponents[@]}"; do
				if [[ $field == *\~* ]]; then
					ret=1
					continue
				else
					__var+=$field
				fi
			done
		done

		return "$ret"
	}

	# Source the appropriate libraries for the current runtime environment.
	function sourceFuncs {
		typeset myRootPath
		if myRootPath=$(dirname "$(readlink -snf -- "$BASH_SOURCE")") && [[ -d $myRootPath ]]; then
			# Source the general-purpose function library.
			source "${myRootPath}/functions" || printf 'Warning: sourcing function library returned nonzero status for the path: %q\n' "${myRootPath}/interactivefunctions" >&2

			# Source libraries of functions for interactive use. Platform-specific
			# setup and function definitions are first so they're available to the
			# common library.
			case ${OSTYPE:-$(uname -o)} in
				[Cc]ygwin)
					source "${myRootPath}/interactivefunctions-cygwin" || return
					setupCygwin
					;;
				GNU/Linux|linux-gnu)
					source "${myRootPath}/interactivefunctions-linux" || return
					setupLinux
					;;
				*)
					echo 'Error: Unknown OSTYPE, not sourcing functions.' >&2
					return 1
			esac

			source "${myRootPath}/interactivefunctions-common" || return
		else
			echo 'Failed while attempting to locate the dotfiles path. Cannot source functions.' >&2
			return 1
		fi
	}

	# Do this last to avoid modifying functions.
	function setupAliases {
		shopt -s expand_aliases

		alias \
			ls='command ls --color=auto --group-directories-first --classify' \
			grep='command grep --color=auto' \
			tree='command tree -ugphD'
	}

	typeset -a bashrcInternalFunctions
	compgen -A function | mapfile -t bashrcInternalFunctions

	typeset -a bashrcFuncCalls=(
		setupUniversalOptions
		setupUniversalEnvironment
		setupDbusSessionBus
		setupAgentDaemons
		sourceFuncs
		setupAliases
	)

	typeset ifun
	for ifun in "${bashrcFuncCalls[@]}"; do
		"$ifun" || printf -- 'bashrc warning: function %s returned nonzero status: %d\n' "$ifun" "$?" >&2
	done

	unset -f "${bashrcInternalFunctions[@]}"
}

main "$@"

# vim: set fenc=utf-8 ff=unix :
