#
# weechat -- plugins.conf
#

[var]
fifo.fifo = "on"
lua.check_license = "on"
perl.buffers.color_current = "lightcyan,red"
perl.buffers.color_default = "default"
perl.buffers.color_hotlist_highlight = "magenta"
perl.buffers.color_hotlist_low = "white"
perl.buffers.color_hotlist_message = "yellow"
perl.buffers.color_hotlist_private = "lightgreen"
perl.buffers.color_number = "lightgreen"
perl.buffers.color_number_char = "lightgreen"
perl.buffers.color_whitelist_buffers = ""
perl.buffers.color_whitelist_default = ""
perl.buffers.color_whitelist_highlight = ""
perl.buffers.color_whitelist_low = ""
perl.buffers.color_whitelist_message = ""
perl.buffers.color_whitelist_private = ""
perl.buffers.hide_merged_buffers = "off"
perl.buffers.indenting = "on"
perl.buffers.indenting_number = "on"
perl.buffers.short_names = "on"
perl.buffers.show_number = "on"
perl.buffers.show_number_char = "."
perl.buffers.show_prefix = "off"
perl.buffers.show_prefix_empty = "on"
perl.buffers.sort = "number"
perl.check_license = "on"
perl.iset.color_bg_selected = "red"
perl.iset.color_help_default_value = "green"
perl.iset.color_help_option_name = "white"
perl.iset.color_help_text = "default"
perl.iset.color_option = "default"
perl.iset.color_option_selected = "white"
perl.iset.color_type = "brown"
perl.iset.color_type_selected = "yellow"
perl.iset.color_value = "cyan"
perl.iset.color_value_selected = "lightcyan"
perl.iset.color_value_undef = "green"
perl.iset.color_value_undef_selected = "lightgreen"
perl.iset.scroll_horiz = "10%"
perl.iset.show_help_bar = "on"
perl.iset.show_help_extra_info = "on"
perl.iset.show_plugin_description = "on"
perl.iset.value_search_char = "="
python.chanop.autodeop = "on"
python.chanop.autodeop_delay = "45"
python.chanop.default_banmask = "host,user"
python.chanop.display_affected = "on"
python.chanop.enable_bar = "on"
python.chanop.enable_multi_kick = "off"
python.chanop.enable_remove = "off"
python.chanop.enable_remove.freenode = "on"
python.chanop.kick_reason = "bleh"
python.chanop.op_command = "/msg chanserv op $channel $nick"
python.chanop.watchlist.freenode = "#bash,#mehbleh"
python.check_license = "on"
python.clone_scanner.autofocus = "on"
python.clone_scanner.clone_onjoin_alert_key = "mask"
python.clone_scanner.clone_report_key = "mask"
python.clone_scanner.colors.clone_report.clone.match = "chat"
python.clone_scanner.colors.clone_report.clone.message = "chat"
python.clone_scanner.colors.clone_report.header.channel = "bold"
python.clone_scanner.colors.clone_report.header.message = "chat"
python.clone_scanner.colors.clone_report.header.number_of_hosts = "bold"
python.clone_scanner.colors.clone_report.subheader.host = "bold"
python.clone_scanner.colors.clone_report.subheader.message = "chat"
python.clone_scanner.colors.clone_report.subheader.number_of_clones = "bold"
python.clone_scanner.colors.join_messages.channel = "bold"
python.clone_scanner.colors.join_messages.identhost = "chat"
python.clone_scanner.colors.join_messages.message = "chat"
python.clone_scanner.colors.join_messages.nick = "bold"
python.clone_scanner.colors.mask.identhost = ""
python.clone_scanner.colors.mask.nick = "bold"
python.clone_scanner.colors.onjoin_alert.channel = "red"
python.clone_scanner.colors.onjoin_alert.matches = "bold red"
python.clone_scanner.colors.onjoin_alert.message = "red"
python.clone_scanner.colors.onjoin_alert.nick = "bold red"
python.clone_scanner.compare_idents = "off"
python.clone_scanner.display_join_messages = "off"
python.clone_scanner.display_onjoin_alert_clone_buffer = "on"
python.clone_scanner.display_onjoin_alert_current_buffer = "off"
python.clone_scanner.display_onjoin_alert_target_buffer = "on"
python.clone_scanner.display_scan_report_clone_buffer = "on"
python.clone_scanner.display_scan_report_current_buffer = "on"
python.clone_scanner.display_scan_report_target_buffer = "off"
python.clone_scanner.hooks.excluded_servers = "bitlbee,twitchtv"
python.clone_scanner.hooks.explicit_servers = "*"
python.clone_scanner.lag_warning = "on"
python.cmd_help.color_alias = "white"
python.cmd_help.color_alias_name = "green"
python.cmd_help.color_alias_value = "green"
python.cmd_help.color_arguments = "cyan"
python.cmd_help.color_delimiters = "lightgreen"
python.cmd_help.color_list = "green"
python.cmd_help.color_list_count = "white"
python.cmd_help.color_no_help = "red"
python.cmd_help.color_option_help = "brown"
python.cmd_help.color_option_name = "yellow"
python.cmd_help.display_no_help = "on"
python.cmd_help.format_option = "(${white:type}) ${description_nls}"
python.cmd_help.ignore_commands = "map,me,die,restart"
python.cmd_help.max_options = "5"
python.cmd_help.prefix = "["
python.cmd_help.right_align = "off"
python.cmd_help.right_padding = "15"
python.cmd_help.space = "2"
python.cmd_help.start_on_load = "off"
python.cmd_help.stop_on_enter = "on"
python.cmd_help.suffix = "]"
python.cmd_help.timer = "0"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.inotify.color_nick = "on"
python.inotify.ignore_channel = ""
python.inotify.ignore_nick = ""
python.inotify.ignore_text = ""
python.inotify.passwd = ""
python.inotify.server_method = "dbus"
python.inotify.server_uri = "http://localhost:7766"
python.tmux_env.exclude = ""
python.tmux_env.include = "*,-*"
python.tmux_env.interval = "30"
python.vimode.no_warn = "on"

[desc]
perl.buffers.color_current = "color for current buffer (default: lightcyan,red)"
perl.buffers.color_default = "default color for buffer name (default: default)"
perl.buffers.color_hotlist_highlight = "change color of buffer name if a highlight messaged received. color, which may be "fg" or "fg,bg" (default: magenta)"
perl.buffers.color_hotlist_low = "change color of buffer name if a low message received. color, which may be "fg" or "fg,bg" (default: white)"
perl.buffers.color_hotlist_message = "change color of buffer name if a normal message received. color, which may be "fg" or "fg,bg" (default: yellow)"
perl.buffers.color_hotlist_private = "change color of buffer name if a private message received. color, which may be "fg" or "fg,bg" (default: lightgreen)"
perl.buffers.color_number = "color for buffer number (default: lightgreen)"
perl.buffers.color_number_char = "color for buffer number char (default: lightgreen)"
perl.buffers.color_whitelist_buffers = "comma separated list of buffers for using a differnt color scheme (for example: freenode.#weechat,freenode.#weechat-fr)"
perl.buffers.color_whitelist_default = "default color for whitelist buffer name"
perl.buffers.color_whitelist_highlight = "highlight color of whitelist buffer name"
perl.buffers.color_whitelist_low = "low color of whitelist buffer name"
perl.buffers.color_whitelist_message = "message color of whitelist buffer name"
perl.buffers.color_whitelist_private = "private color of whitelist buffer name"
perl.buffers.hide_merged_buffers = "hide merged buffers (default: off)"
perl.buffers.indenting = "use indenting for some buffers like IRC channels (default: on)"
perl.buffers.indenting_number = "use indenting for numbers (default: on)"
perl.buffers.short_names = "display short names (remove text before first "." in buffer name) (default: on)"
perl.buffers.show_number = "display channel number (default: on)"
perl.buffers.show_number_char = "display a char after channel number (default: ".")"
perl.buffers.show_prefix = "show your prefix for channel (default: off)"
perl.buffers.show_prefix_empty = "use a placeholder for channels without prefix (default: on)"
perl.buffers.sort = "sort buffer-list by "number" or "name" (default: number)"
python.clone_scanner.autofocus = "Focus the clone_scanner buffer in the current window if it isn't already displayed by a window. (default: "on")"
python.clone_scanner.clone_onjoin_alert_key = "Which 'key' to display in the on-join alerts: 'mask' for full hostmasks, or 'nick' for nicks (default: "mask")"
python.clone_scanner.clone_report_key = "Which 'key' to display in the clone report: 'mask' for full hostmasks, or 'nick' for nicks (default: "mask")"
python.clone_scanner.colors.clone_report.clone.match = "The colour of the match details (masks or nicks) in the clone report. (default: "chat")"
python.clone_scanner.colors.clone_report.clone.message = "The colour of the clone hit in the clone report message. (default: "chat")"
python.clone_scanner.colors.clone_report.header.channel = "The colour of the channel name in the clone report header. (default: "bold")"
python.clone_scanner.colors.clone_report.header.message = "The colour of the clone report header. (default: "chat")"
python.clone_scanner.colors.clone_report.header.number_of_hosts = "The colour of the number of hosts in the clone report header. (default: "bold")"
python.clone_scanner.colors.clone_report.subheader.host = "The colour of the host in the clone report subheader. (default: "bold")"
python.clone_scanner.colors.clone_report.subheader.message = "The colour of the clone report subheader. (default: "chat")"
python.clone_scanner.colors.clone_report.subheader.number_of_clones = "The colour of the number of clones in the clone report subheader. (default: "bold")"
python.clone_scanner.colors.join_messages.channel = "The colour for the 'channel'-part of the join messages. (default: "bold")"
python.clone_scanner.colors.join_messages.identhost = "The colour for the 'ident@host'-part of the join messages. (default: "chat")"
python.clone_scanner.colors.join_messages.message = "The base colour for the join messages. (default: "chat")"
python.clone_scanner.colors.join_messages.nick = "The colour for the 'nick'-part of the join messages. Note: if you have colorize_nicks, this option might not always work as expected. (default: "bold")"
python.clone_scanner.colors.mask.identhost = "The formatting of the identhost in the match mask. (default: "")"
python.clone_scanner.colors.mask.nick = "The formatting of the nick in the match mask. (default: "bold")"
python.clone_scanner.colors.onjoin_alert.channel = "The on-join clone alert's channel colour. Formats are space separated. (default: "red")"
python.clone_scanner.colors.onjoin_alert.matches = "The on-join clone alert's matches (masks or nicks) colour. Formats are space separated. Note: if you have colorize_nicks, this option might not work as expected. (default: "bold red")"
python.clone_scanner.colors.onjoin_alert.message = "The on-join clone alert's message colour. Formats are space separated. (default: "red")"
python.clone_scanner.colors.onjoin_alert.nick = "The on-join clone alert's nick colour. Formats are space separated. Note: if you have colorize_nicks, this option might not work as expected. (default: "bold red")"
python.clone_scanner.compare_idents = "Match against ident@host.name instead of just the hostname. Useful if you don't want different people from bouncers marked as clones (default: "off")"
python.clone_scanner.display_join_messages = "Display all joins in the clone_scanner buffer (default: "off")"
python.clone_scanner.display_onjoin_alert_clone_buffer = "Display an on-join clone alert in the clone_scanner buffer (default: "on")"
python.clone_scanner.display_onjoin_alert_current_buffer = "Display an on-join clone alert in the current buffer (default: "off")"
python.clone_scanner.display_onjoin_alert_target_buffer = "Display an on-join clone alert in the buffer where the clone was detected (default: "on")"
python.clone_scanner.display_scan_report_clone_buffer = "Display manual scan reports in the clone buffer (default: "on")"
python.clone_scanner.display_scan_report_current_buffer = "Display manual scan reports in the current buffer (default: "on")"
python.clone_scanner.display_scan_report_target_buffer = "Display manual scan reports in the buffer of the scanned channel (default: "off")"
python.clone_scanner.hooks.excluded_servers = "Which servers should the hook *not* be valid for? There's no support for wildcards unfortunately. E.g.: 'bitlbee,twitchtv' to exclude servers named bitlbee and twitchtv (default). (default: "bitlbee,twitchtv")"
python.clone_scanner.hooks.explicit_servers = "Comma-separated, wildcard-supporting list of servers for which we should add hook to for monitoring clones. E.g. 'freenode,chat4all,esper*' or '*' (default) (default: "*")"
python.clone_scanner.lag_warning = "Show temporary warning upon script load regarding the inefficiency of the script. Set to "off" to disable. (default: "on")"
python.cmd_help.color_alias = "color for text "Alias" (default: "white")"
python.cmd_help.color_alias_name = "color for alias name (default: "green")"
python.cmd_help.color_alias_value = "color for alias value (default: "green")"
python.cmd_help.color_arguments = "color for command arguments (default: "cyan")"
python.cmd_help.color_delimiters = "color for delimiters (default: "lightgreen")"
python.cmd_help.color_list = "color for list of commands/options (default: "green")"
python.cmd_help.color_list_count = "color for number of commands/options in list found (default: "white")"
python.cmd_help.color_no_help = "color for text "No help" (default: "red")"
python.cmd_help.color_option_help = "color for help on option (default: "brown")"
python.cmd_help.color_option_name = "color for name of option found (by adding "*" to option name) (default: "yellow")"
python.cmd_help.display_no_help = "display "No help" when command is not found (default: "on")"
python.cmd_help.format_option = "format of help for options: free text with identifiers using format: ${name} or ${color:name}: color is a WeeChat color (optional), name is a field of infolist "option": full_name, config_name, section_name, option_name, description, description_nls, string_values, min, max, null_value_allowed, value_is_null, default_value_is_null, type, value, default_value (default: "(${white:type}) ${description_nls}")"
python.cmd_help.ignore_commands = "comma-separated list of commands (without leading "/") to ignore (default: "map,me,die,restart")"
python.cmd_help.max_options = "max number of options displayed in list (default: "5")"
python.cmd_help.prefix = "string displayed before help (default: "[")"
python.cmd_help.right_align = "align help to right (default: "off")"
python.cmd_help.right_padding = "padding to right when aligned to right (default: "15")"
python.cmd_help.space = "minimum space before help (default: "2")"
python.cmd_help.start_on_load = "auto start help when script is loaded (default: "off")"
python.cmd_help.stop_on_enter = "enter key stop help (default: "on")"
python.cmd_help.suffix = "string displayed after help (default: "]")"
python.cmd_help.timer = "number of seconds help is displayed (0 = display until help is toggled) (default: "0")"
python.vimode.no_warn = "don't warn about problematickeybindings and tmux/screen (default: "off")"
